{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import sympy as sy\n",
    "sy.init_printing()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "n = sy.Symbol('n')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$$\n",
    "  \\left[\n",
    "    \\begin{array}{rrr}\n",
    "      a_{n+2} \\\\\n",
    "      a_{n+1}\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "  = \\left[\n",
    "    \\begin{array}{rrr}\n",
    "      2 & 8 \\\\\n",
    "      1 & 0 \\\\\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "  \\left[\n",
    "    \\begin{array}{rrr}\n",
    "      a_{n+1} \\\\\n",
    "      a_{n}\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "$$\n",
    "を変形すると\n",
    "$$\n",
    "  \\left[\n",
    "    \\begin{array}{}\n",
    "      a_{n+1} \\\\\n",
    "      a_{n}\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "  = \\left[\n",
    "    \\begin{array}{}\n",
    "      2 & 8 \\\\\n",
    "      1 & 0 \\\\\n",
    "    \\end{array}\n",
    "  \\right] ^ {n-1}\n",
    "  \\left[\n",
    "    \\begin{array}{}\n",
    "      a_{2} \\\\\n",
    "      a_{1}\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$\\left[\\begin{matrix}2 & 8\\\\1 & 0\\end{matrix}\\right]$$"
      ],
      "text/plain": [
       "⎡2  8⎤\n",
       "⎢    ⎥\n",
       "⎣1  0⎦"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "A = sy.Matrix([[2, 8], [1, 0]])\n",
    "A"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$$\n",
    "  \\left[\n",
    "    \\begin{array}{rrr}\n",
    "      a_{n+1} \\\\\n",
    "      a_{n}\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "= A^{n-1} \\left[\n",
    "    \\begin{array}{}\n",
    "      a_{2} \\\\\n",
    "      a_{1}\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$\\left[\\begin{matrix}- \\frac{\\left(-2\\right)^{n - 1}}{3} + \\frac{10 \\cdot 4^{n - 1}}{3}\\\\\\frac{\\left(-2\\right)^{n - 1}}{6} + \\frac{5 \\cdot 4^{n - 1}}{6}\\end{matrix}\\right]$$"
      ],
      "text/plain": [
       "⎡      n - 1       n - 1⎤\n",
       "⎢  (-2)        10⋅4     ⎥\n",
       "⎢- ───────── + ─────────⎥\n",
       "⎢      3           3    ⎥\n",
       "⎢                       ⎥\n",
       "⎢     n - 1      n - 1  ⎥\n",
       "⎢ (-2)        5⋅4       ⎥\n",
       "⎢ ───────── + ────────  ⎥\n",
       "⎣     6          6      ⎦"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "A ** (n-1) * sy.Matrix([3, 1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "このように求めることができた(2行目が `n` の一般項)\n",
    "\n",
    "でも、これでは面白くないし、人力では厳しいので対角化して解いてみることにする"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$\\left [ \\left ( -2, \\quad 1, \\quad \\left [ \\left[\\begin{matrix}-2\\\\1\\end{matrix}\\right]\\right ]\\right ), \\quad \\left ( 4, \\quad 1, \\quad \\left [ \\left[\\begin{matrix}4\\\\1\\end{matrix}\\right]\\right ]\\right )\\right ]$$"
      ],
      "text/plain": [
       "⎡⎛       ⎡⎡-2⎤⎤⎞  ⎛      ⎡⎡4⎤⎤⎞⎤\n",
       "⎢⎜-2, 1, ⎢⎢  ⎥⎥⎟, ⎜4, 1, ⎢⎢ ⎥⎥⎟⎥\n",
       "⎣⎝       ⎣⎣1 ⎦⎦⎠  ⎝      ⎣⎣1⎦⎦⎠⎦"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# スペクトル分解して、固有値と固有ベクトルを求める\n",
    "# 固有値, 重複度, 固有ベクトル(重複度分)\n",
    "evs = A.eigenvects()\n",
    "evs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$\\left[\\begin{matrix}-2 & 4\\\\1 & 1\\end{matrix}\\right]$$"
      ],
      "text/plain": [
       "⎡-2  4⎤\n",
       "⎢     ⎥\n",
       "⎣1   1⎦"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "P = sy.Matrix([ev[-1][0].values() for ev in evs]).T\n",
    "P"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$\\left[\\begin{matrix}- \\frac{1}{6} & \\frac{2}{3}\\\\\\frac{1}{6} & \\frac{1}{3}\\end{matrix}\\right]$$"
      ],
      "text/plain": [
       "⎡-1/6  2/3⎤\n",
       "⎢         ⎥\n",
       "⎣1/6   1/3⎦"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "P ** -1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$\\left[\\begin{matrix}-1 & 4\\\\1 & 2\\end{matrix}\\right]$$"
      ],
      "text/plain": [
       "⎡-1  4⎤\n",
       "⎢     ⎥\n",
       "⎣1   2⎦"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 6倍したもの\n",
    "P ** -1 * 6"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$$ D = P^{-1} A P $$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$\\left[\\begin{matrix}-2 & 0\\\\0 & 4\\end{matrix}\\right]$$"
      ],
      "text/plain": [
       "⎡-2  0⎤\n",
       "⎢     ⎥\n",
       "⎣0   4⎦"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "D = P ** (-1) * A * P\n",
    "D"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "D を用いて\n",
    "\n",
    "$$ A^{n-1} = P D^{n-1} P^{-1} $$\n",
    "\n",
    "のように表現できる"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$\\left[\\begin{matrix}- \\frac{\\left(-2\\right)^{n - 1}}{3} + \\frac{10 \\cdot 4^{n - 1}}{3}\\\\\\frac{\\left(-2\\right)^{n - 1}}{6} + \\frac{5 \\cdot 4^{n - 1}}{6}\\end{matrix}\\right]$$"
      ],
      "text/plain": [
       "⎡      n - 1       n - 1⎤\n",
       "⎢  (-2)        10⋅4     ⎥\n",
       "⎢- ───────── + ─────────⎥\n",
       "⎢      3           3    ⎥\n",
       "⎢                       ⎥\n",
       "⎢     n - 1      n - 1  ⎥\n",
       "⎢ (-2)        5⋅4       ⎥\n",
       "⎢ ───────── + ────────  ⎥\n",
       "⎣     6          6      ⎦"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# これを計算すると同様の結果を得られる\n",
    "(P) * (D ** (n-1)) * (P ** -1) * sy.Matrix([3, 1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "ちなみに\n",
    "$$\n",
    "  \\left[\n",
    "    \\begin{array}{rrr}\n",
    "      a_{n+2} \\\\\n",
    "      a_{n+1}\n",
    "    \\end{array}\n",
    "  \\right]= A\n",
    "  \\left[\n",
    "    \\begin{array}{rrr}\n",
    "      a_{n+1} \\\\\n",
    "      a_{n}\n",
    "    \\end{array}\n",
    "  \\right]  \n",
    "$$\n",
    "\n",
    "を変形して\n",
    "\n",
    "$$\n",
    "  \\left[\n",
    "    \\begin{array}{rrr}\n",
    "      a_{n+2} \\\\\n",
    "      a_{n+1}\n",
    "    \\end{array}\n",
    "  \\right] = P D P^{-1}\n",
    "  \\left[\n",
    "    \\begin{array}{rrr}\n",
    "      a_{n+1} \\\\\n",
    "      a_{n}\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "$$\n",
    "\n",
    "$$ P^{-1}\n",
    "  \\left[\n",
    "    \\begin{array}{rrr}\n",
    "      a_{n+2} \\\\\n",
    "      a_{n+1}\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "= D P^{-1}\n",
    "  \\left[\n",
    "    \\begin{array}{rrr}\n",
    "      a_{n+1} \\\\\n",
    "      a_{n}\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "$$\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$$\n",
    "  \\left[\n",
    "    \\begin{array}{}\n",
    "      -1 & 4 \\\\\n",
    "      1 & 2 \\\\\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "  \\left[\n",
    "    \\begin{array}{rrr}\n",
    "      a_{n+2} \\\\\n",
    "      a_{n+1}\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "  = \\left[\n",
    "    \\begin{array}{}\n",
    "      -2 & 0 \\\\\n",
    "      0 & 4 \\\\\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "  \\left[\n",
    "    \\begin{array}{}\n",
    "      -1 & 4 \\\\\n",
    "      1 & 2 \\\\\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "  \\left[\n",
    "    \\begin{array}{rrr}\n",
    "      a_{n+1} \\\\\n",
    "      a_{n}\n",
    "    \\end{array}\n",
    "  \\right]\n",
    "$$\n",
    "(両辺を6倍してある)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "漸化式の途中式と一致しているのがわかる\n",
    "$$\n",
    "\\begin{eqnarray}\n",
    "\\left\\{\n",
    "\\begin{array}{l}\n",
    "  a_{n+2} - 4a_{n+1} = -2(a_{n+1} - 4a_n) \\\\\n",
    "  a_{n+2} + 2a_{n+1} =  4(a_{n+1} + 2a_n)\n",
    "\\end{array}\n",
    "\\right.\n",
    "\\end{eqnarray}\n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
